{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["CalculatorApp","props","state","sequence","result","tempVal","history","handleClick","bind","handleXButtonClick","calculateSequence","clear","clearEntry","backspace","res","this","seq","calSeq","replace","match","baseNum","slice","concat","includes","length","setState","String","eval","toPrecision","document","querySelector","classList","remove","temp","event","val","target","value","hisSeq","hisRes","add","className","DisplaySequenceComponent","DisplayResultComponent","onClick","NumberButton","OperatorButton","OtherButton","EqualButton","HistoryPaneComponent","onXButtonClick","React","Component","type","maxLength","disabled","autoFocus","historyItemsComponentList","map","item","i","HistoryItem","key","title","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1776f837.chunk.js","sourcesContent":["/* eslint-disable no-eval */\nimport React from \"react\";\nimport \"./App.css\";\n\nclass CalculatorApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sequence: \"\",\n      result: \"0\",\n      tempVal: \"\",\n      history: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleXButtonClick = this.handleXButtonClick.bind(this);\n    this.calculateSequence = this.calculateSequence.bind(this);\n    this.clear = this.clear.bind(this);\n    this.clearEntry = this.clearEntry.bind(this);\n    this.backspace = this.backspace.bind(this);\n  }\n\n  //Function to determine scenarios when hit equal \"=\"\n  calculateSequence() {\n    const res = this.state.result;\n    const seq = this.state.sequence;\n    let calSeq = seq + res;\n    calSeq = calSeq.replace(/x/g, \"*\");\n    calSeq = calSeq.replace(/÷/g, \"/\");\n    calSeq = calSeq.replace(/--/g, \"+\");\n    calSeq = calSeq.replace(/√\\d*\\.?\\d+/g, match => {\n      let baseNum = match.slice(1);\n      return \"Math.sqrt(\".concat(baseNum, \")\");\n    });\n    calSeq = calSeq.replace(/\\(\\d*\\/?\\d*\\.?\\d+\\)²/g, match => {\n      let baseNum = match.slice(0, -1);\n      return \"(\".concat(baseNum, \"*\", baseNum, \")\");\n    });\n    calSeq = calSeq.replace(/\\(\\d*\\/?\\d*\\.?\\d+\\)³/g, match => {\n      let baseNum = match.slice(0, -1);\n      return \"(\".concat(baseNum, \"*\", baseNum, \"*\", baseNum, \")\");\n    });\n    if ([\"+\", \"-\", \"x\", \"÷\"].includes(seq[seq.length - 1])) {\n      this.setState({\n        sequence: seq + res + \"=\",\n        result:\n          String(eval(calSeq)).length > 9\n            ? eval(calSeq).toPrecision(9)\n            : eval(calSeq),\n        tempVal: \"\"\n      });\n    } else {\n      this.setState({\n        sequence: res + \"=\"\n      });\n    }\n    document.querySelector('div.history').classList.remove('hide');\n  }\n  //C function\n  clear() {\n    this.setState({\n      sequence: \"\",\n      result: \"0\",\n      temp: \"\"\n    });\n  }\n  //CE function\n  clearEntry() {\n    const res = this.state.result;\n    const seq = this.state.sequence;\n    if (seq[seq.length - 1] === \"=\") {\n      this.clear();\n    } else if (res !== \"0\") {\n      this.setState({\n        result: \"0\",\n        tempVal: \"\"\n      });\n    }\n  }\n  //Backspace function\n  backspace() {\n    const seq = this.state.sequence;\n    const res = this.state.result;\n    if (seq[seq.length - 1] === \"=\") {\n      this.setState({\n        sequence: \"\"\n      });\n    } else if (res.length > 1) {\n      this.setState({\n        result: res.slice(0, -1)\n      });\n    } else if (res.length === 1) {\n      this.setState({\n        result: \"0\",\n        tempVal: \"\"\n      });\n    }\n  }\n  //Handle click function for number, operator and other buttons\n  handleClick(event) {\n    let val = event.target.value;\n    let seq = this.state.sequence;\n    let res = this.state.result;\n    let temp = this.state.tempVal;\n    let calSeq = seq + res;\n    calSeq = calSeq.replace(/x/g, \"*\");\n    calSeq = calSeq.replace(/÷/g, \"/\");\n    calSeq = calSeq.replace(/--/g, \"+\");\n    //Using Callback function to access match instance of RegEx\n    calSeq = calSeq.replace(/√\\d*\\.?\\d+/g, match => {\n      let baseNum = match.slice(1);\n      return \"Math.sqrt(\".concat(baseNum, \")\");\n    });\n    calSeq = calSeq.replace(/\\(\\d*\\/?\\d*\\.?\\d+\\)²/g, match => {\n      let baseNum = match.slice(0, -1);\n      return baseNum.concat(\"*\", baseNum);\n    });\n    calSeq = calSeq.replace(/\\(\\d*\\/?\\d*\\.?\\d+\\)³/g, match => {\n      let baseNum = match.slice(0, -1);\n      return baseNum.concat(\"*\", baseNum, \"*\", baseNum);\n    });\n    //If press C\n    if (val === \"C\") {\n      this.clear();\n    } //If press CE\n    else if (val === \"CE\") {\n      this.clearEntry();\n    } //If press =\n    else if (val === \"=\") {\n      if (seq[seq.length - 1] !== \"=\") {\n        this.calculateSequence();\n        this.setState(state => ({\n          history: state.history.concat({\n            hisSeq: state.sequence,\n            hisRes: state.result\n          })\n        }));\n        /* (Alternative) \n        this.setState(state => {\n          const history = state.history.concat({hisSeq: state.sequence, hisRes: state.result}); \n          return {\n            history\n          }; \n        }); */\n      }\n    } //If press backspace\n    else if (val === \"←\") {\n      this.backspace();\n    } //If press negate\n    else if (val === \"±\") {\n      if (res !== \"0\") {\n        if (res[0] !== \"-\") {\n          this.setState({\n            result: \"-\" + res\n          });\n        } else {\n          this.setState({\n            result: res.slice(1)\n          });\n        }\n      }\n    } //If press x²\n    else if (val === \"x2\") {\n      if (res[res.length - 1] === \"³\") {\n        this.setState({\n          result: res.slice(0, -1) + \"²\",\n          temp: \"\"\n        });\n      } else if (res[res.length - 1] === \"²\") {\n      } else {\n        this.setState({\n          result: \"(\".concat(res,\")\",\"²\"),\n          temp: \"\"\n        });\n      }\n    } //If press x³\n    else if (val === \"x3\") {\n      if (res[res.length - 1] === \"²\") {\n        this.setState({\n          result: res.slice(0, -1) + \"³\",\n          temp: \"\"\n        });\n      } else if (res[res.length - 1] === \"³\") {\n      } else {\n        this.setState({\n          result: \"(\".concat(res,\")\",\"³\"),\n          temp: \"\"\n        });\n      }\n    } //If press √x\n    else if (val === \"√\") {\n      this.setState({\n        result: \"√\" + res\n      });\n    } //If press 1/x\n    else if (val === \"1/x\") {\n      if (res !== \"0\") {\n        this.setState({\n          result: \"1/\" + res\n        });\n      }\n    } //If press any operator\n    else if ([\"+\", \"-\", \"x\", \"÷\"].includes(val)) {\n      if ([\"+\", \"-\", \"x\", \"÷\"].includes(seq[seq.length - 1])) {\n        if (temp !== \"\") {\n          this.setState({\n            sequence: seq + res + val,\n            result:\n              String(eval(calSeq)).length > 9\n                ? eval(calSeq).toPrecision(9)\n                : eval(calSeq),\n            tempVal: \"\"\n          });\n        } else {\n          this.setState({\n            sequence: seq.replace(/.$/, val)\n          });\n        }\n      } else {\n        this.setState({\n          sequence: res + val\n        });\n      }\n    } //If press any number number\n    else {\n      //Start up case\n      if (res === \"0\" && seq === \"\") {\n        this.setState({\n          result: val\n        });\n        //When sequence has the form \"### +\"\n      } else if ([\"+\", \"-\", \"x\", \"÷\"].includes(seq[seq.length - 1])) {\n        this.setState({\n          tempVal: temp + val,\n          result: temp + val\n        });\n        //When sequence has the form \"### + ### =\"\n      } else if (seq[seq.length - 1] === \"=\") {\n        this.clear();\n        this.setState({\n          result: val\n        });\n        //When sequence is empty\n      } else {\n        this.setState({\n          result: res + val\n        });\n      }\n    }\n  }\n  //Function to handle when X button clicked\n  handleXButtonClick(){\n    this.setState({\n      history: []\n    });\n    document.querySelector('div.history').classList.add('hide');\n    this.clear();\n  }\n  //Render method\n  render() {\n    return (\n      <div>\n        <h1>\n          Tony's Calculator App\n          <br />\n          Using <span>ReactJS</span>\n        </h1>\n        <div className=\"calculator-container\">\n          <div className=\"calculator-body\">\n            <DisplaySequenceComponent sequence={this.state.sequence} />\n            <DisplayResultComponent result={this.state.result} />\n            <div className=\"row\">\n              <button className=\"cube\" value=\"x3\" onClick={this.handleClick}>\n                x³\n              </button>\n              <button className=\"square\" value=\"x2\" onClick={this.handleClick}>\n                x²\n              </button>\n              <button className=\"1/x\" value=\"1/x\" onClick={this.handleClick}>\n                1/x\n              </button>\n              <button\n                className=\"squareroot\"\n                value=\"√\"\n                onClick={this.handleClick}\n              >\n                √x\n              </button>\n            </div>\n            <div className=\"row\">\n              <NumberButton value=\"7\" onClick={this.handleClick} />\n              <NumberButton value=\"8\" onClick={this.handleClick} />\n              <NumberButton value=\"9\" onClick={this.handleClick} />\n              <OperatorButton value=\"÷\" onClick={this.handleClick} />\n            </div>\n            <div className=\"row\">\n              <NumberButton value=\"4\" onClick={this.handleClick} />\n              <NumberButton value=\"5\" onClick={this.handleClick} />\n              <NumberButton value=\"6\" onClick={this.handleClick} />\n              <OperatorButton value=\"x\" onClick={this.handleClick} />\n            </div>\n            <div className=\"row\">\n              <NumberButton value=\"1\" onClick={this.handleClick} />\n              <NumberButton value=\"2\" onClick={this.handleClick} />\n              <NumberButton value=\"3\" onClick={this.handleClick} />\n              <OperatorButton value=\"-\" onClick={this.handleClick} />\n            </div>\n            <div className=\"row\">\n              <OtherButton value=\"±\" onClick={this.handleClick} />\n              <NumberButton value=\"0\" onClick={this.handleClick} />\n              <OtherButton value=\".\" onClick={this.handleClick} />\n              <OperatorButton value=\"+\" onClick={this.handleClick} />\n            </div>\n            <div className=\"row\">\n              <OtherButton value=\"C\" onClick={this.handleClick} />\n              <OtherButton value=\"CE\" onClick={this.handleClick} />\n              <OtherButton value=\"←\" onClick={this.handleClick} />\n              <EqualButton value=\"=\" onClick={this.handleClick} />\n            </div>\n          </div>\n          {/*History Pane to display memory result after clicking =*/}\n          <HistoryPaneComponent history={this.state.history} onXButtonClick={this.handleXButtonClick}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass DisplaySequenceComponent extends React.Component {\n  render() {\n    return (\n      <div className=\"sequence\">\n        <p>{this.props.sequence}</p>\n      </div>\n    );\n  }\n}\n\nclass DisplayResultComponent extends React.Component {\n  render() {\n    let result = this.props.result;\n    return (\n      <div className=\"result\">\n        <input value={result} type=\"tel\" maxLength=\"9\" disabled autoFocus/>\n      </div>\n    );\n  }\n}\n\nclass NumberButton extends React.Component {\n  render() {\n    return (\n      <button\n        value={this.props.value}\n        className=\"number\"\n        onClick={this.props.onClick}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass OperatorButton extends React.Component {\n  render() {\n    return (\n      <button\n        value={this.props.value}\n        className=\"operator\"\n        onClick={this.props.onClick}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass EqualButton extends React.Component {\n  render() {\n    return (\n      <button\n        value={this.props.value}\n        className=\"equal\"\n        onClick={this.props.onClick}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass OtherButton extends React.Component {\n  render() {\n    return (\n      <button\n        value={this.props.value}\n        className=\"other\"\n        onClick={this.props.onClick}\n      >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass HistoryPaneComponent extends React.Component {\n  render() {\n    const historyItemsData = this.props.history;\n    const historyItemsComponentList = historyItemsData.map((item, i) => {\n      return (\n        <HistoryItem\n          key={i}\n          sequence={item.hisSeq}\n          result={item.hisRes}\n        />\n      );\n    });\n    return (\n      <div className=\"history hide\">\n        <div className=\"history-title\">\n          <h2>Memory</h2>\n          <button onClick={this.props.onXButtonClick} className=\"reset-memory\" title=\"Clear Memory\" >\n            X\n          </button>\n        </div> \n        {historyItemsComponentList}\n      </div>\n    );\n  }\n}\n\nclass HistoryItem extends React.Component {\n  render() {\n    return (\n      <div className=\"history-item\" onClick={this.props.onClick}>\n        <p className=\"history-sequence\">{this.props.sequence}</p>\n        <p className=\"history-result\">{this.props.result}</p>\n      </div>\n    );\n  }\n}\nexport default CalculatorApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CalculatorApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<CalculatorApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}